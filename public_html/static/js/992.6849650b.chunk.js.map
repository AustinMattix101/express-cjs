{"version":3,"file":"static/js/992.6849650b.chunk.js","mappings":"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","sources":["components/assets/components/AlertDismissible.tsx","components/pages/signin/SigninScreen.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { IAlert } from '.';\r\n\r\nexport const ErrorAlertDismissible: React.FC<IAlert> = ({ data }) => {\r\n  const [show, setShow] = useState(true);\r\n\r\n  if (show) {\r\n    return (\r\n      <div className=\"danger\" onLoad={() => setShow(false)} style={{ width: 380, marginLeft: 56 }}>\r\n        <div>\r\n          <svg className=\"bi flex-shrink-0 me-2\" role=\"img\" aria-label=\"Danger:\" viewBox=\"0 0 16 16\" height={22} width={22}>\r\n            <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\r\n          </svg>{data.error && <span>{data.status} {data.statusCode} ERROR!</span>}\r\n        </div>\r\n        <p className=\"error-message\">\r\n          <span>{data.error}</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  return <button onClick={() => setShow(true)} className=\"w-50 btn btn-outline-danger rounded-3\" style={{ marginLeft: 133 }}>Show Error</button>;\r\n};\r\n\r\n\r\nexport const SuccessAlertDismissible: React.FC<IAlert> = ({ data }) => {\r\n  const [show, setShow] = useState(true);\r\n\r\n  if (show) {\r\n    return (\r\n      <div className=\"success\" onLoad={() => setShow(false)} style={{ width: 380, marginLeft: 56 }}>\r\n        <div>\r\n          <svg className=\"bi flex-shrink-0 me-2\" role=\"img\" aria-label=\"Danger:\" viewBox=\"0 0 16 16\" height={22} width={22}>\r\n            <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n          </svg>{data.status} SUCCESS!\r\n        </div>\r\n        <p className=\"success-message\">\r\n          <span>{data.message}</span><br />\r\n          {(data.data.username || data.data.email) && <span>Profiles: </span>}\r\n          {data.data.username && <span><br />{`Username: ${data.data.username}`}</span>}\r\n          {data.data.email && <span><br />{`Email: ${data.data.email}`}</span>}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  return <button onClick={() => setShow(true)} className=\"w-50 btn btn-outline-success rounded-3\" style={{ marginLeft: 133 }}>Show Success</button>;\r\n\r\n};","import \"./SigninScreen.css\";\r\nimport { useState, useEffect, ChangeEventHandler, useRef, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { GitHubIcon, TwitterIcon, FacebookIcon, GoogleIcon } from \"../../assets/components/svg\";\r\nimport { BsFillEyeFill, BsFillEyeSlashFill } from \"react-icons/bs\";\r\nimport { ErrorAlertDismissible } from \"../../assets/components/AlertDismissible\";\r\nimport { capitalize, getLSItem } from \"..\";\r\nimport { ACTIONS, AuthContext } from \"../../../context/AuthContext\";\r\n\r\n\r\nconst LoginScreen: React.FC = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const storedRemember = (localStorage.getItem(\"remember\") === 'true');\r\n    const fetchEmail = getLSItem(\"user\", 0, \"email\");\r\n    const initEmail = storedRemember ? fetchEmail : ``;\r\n    const fetchUsername = getLSItem(\"user\", 0, \"username\");\r\n\r\n    if (storedRemember) {\r\n        localStorage.setItem(\"remember\", \"true\");\r\n    }\r\n\r\n    const [credentials, setCredentials] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const [passwordType, setPasswordType] = useState(\"password\");\r\n\r\n    const emailRef = useRef<any>();\r\n\r\n    const { state, dispatch } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const value = emailRef.current.value;\r\n        if (!value) {\r\n            emailRef.current.focus();\r\n            emailRef.current.value = initEmail;\r\n            setCredentials((prev) => ({ ...prev, email: initEmail }));\r\n        }\r\n\r\n\r\n    }, [initEmail]);\r\n\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const token = JSON.parse(localStorage.getItem(\"user\") || ``)[0][\"token\"];\r\n            if (token) {\r\n                if (location.state?.from) {\r\n                    navigate(location.state.from);\r\n                } else {\r\n                    navigate(\"/\");\r\n                }\r\n            }\r\n        } catch (error) {\r\n            navigate(\"/signin\");\r\n        }\r\n\r\n    }, [navigate, location.state?.from]);\r\n\r\n    const handleLocalStorage = () => {\r\n        window.dispatchEvent(new Event(\"login\"));\r\n    };\r\n\r\n    const loginHandler = async (e: any) => {\r\n        e.preventDefault();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        dispatch({ type: ACTIONS.START });\r\n\r\n        try {\r\n\r\n            const { data } = await axios.post(\"/api/auth/login\", { email: credentials.email, password: credentials.password }, config);\r\n\r\n            const theme = localStorage.getItem(\"theme\");\r\n\r\n            const user = [{\r\n                ...data.data,\r\n                token: data.token,\r\n                remember: storedRemember,\r\n                theme\r\n            }];\r\n\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n\r\n            dispatch({ type: ACTIONS.SUCCESS, payload: data });\r\n\r\n            if (data) {\r\n                handleLocalStorage();\r\n\r\n                if (location.state?.from) {\r\n                    navigate(location.state.from);\r\n                } else {\r\n                    navigate(\"/\");\r\n                }\r\n            }\r\n\r\n        } catch (error: any) {\r\n            const forbidden = (error.response.status === 403);\r\n            if (forbidden) {\r\n                localStorage.setItem(\"Email\", credentials.email);\r\n                navigate(\"/emailconfirm\");\r\n            }\r\n            let ErrorRes = error.response.data;\r\n            ErrorRes.statusCode = error.response.status;\r\n            dispatch({ type: ACTIONS.FAILURE, payload: ErrorRes });\r\n            setTimeout(() => {\r\n                dispatch({ type: ACTIONS.LOGOUT });\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        e.preventDefault();\r\n        setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\r\n    };\r\n\r\n    const togglePassword = async () => {\r\n        if (passwordType === \"password\") {\r\n            setPasswordType(\"text\");\r\n            return;\r\n        }\r\n        setPasswordType(\"password\");\r\n    };\r\n\r\n    const navigateHandler = () => {\r\n        if (location.state?.from) {\r\n            navigate(location.state.from);\r\n        } else {\r\n            navigate(\"/\");\r\n        }\r\n    };\r\n\r\n    const toggleRemember: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (e.target.checked) {\r\n            localStorage.setItem(\"remember\", \"true\");\r\n        } else {\r\n            localStorage.setItem(\"remember\", \"false\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-screen\">\r\n            <div className=\"pb-3\" tabIndex={-1} role=\"dialog\">\r\n                <div className=\"\">\r\n                    <div className=\"p-5 pb-\">\r\n                        <h2 className=\"text-center font-bold\">Sign in</h2>\r\n                        <div className=\"text-right\">\r\n                            <button type=\"button\" aria-label=\"Close\" onClick={navigateHandler}>Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    {fetchUsername && <p className='h4 text-center'>Welcome, {capitalize(fetchUsername)}</p>}\r\n                    {state.loading && <span>Loading...</span>}\r\n                    {state.error !== null && <ErrorAlertDismissible data={state.error} />}\r\n\r\n                    <div className=\"p-5 pt-3\">\r\n                        <form className=\"login-screen__form\" onSubmit={loginHandler}>\r\n\r\n                            <div className=\"mb-2\">\r\n                                <label htmlFor=\"email\">Email: </label>\r\n                                <input\r\n                                    ref={emailRef}\r\n                                    type=\"email\"\r\n                                    required\r\n                                    id=\"email\"\r\n                                    className=\"rounded-4 root__background-color\"\r\n                                    autoComplete=\"true\"\r\n                                    placeholder=\"example@example.com\"\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"mb-2\">\r\n                                <label htmlFor=\"password\">Password: </label>\r\n                                <input\r\n                                    type={passwordType}\r\n                                    required\r\n                                    id=\"password\"\r\n                                    className=\"rounded-4 root__background-color\"\r\n                                    placeholder=\"Password\"\r\n                                    name=\"passwordType\"\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <button type=\"button\" onClick={togglePassword}>{passwordType === \"password\" && <BsFillEyeFill />}{passwordType === \"text\" && <BsFillEyeSlashFill />}</button>\r\n                            </div>\r\n\r\n                            <div className=\"text-end\">\r\n                                <Link to=\"/forgotpassword\" tabIndex={4}>Forgot your password?</Link>\r\n                            </div>\r\n\r\n                            <div className=\"text-center\">\r\n                                <button type=\"submit\">Sign in</button>\r\n                            </div>\r\n\r\n                            <div className=\"text-center\">\r\n                                <div className=\"checkbox m-2 form-check form-switch\">\r\n                                    <label className=\"form-check-label\" htmlFor=\"rememberme\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            role=\"switch\"\r\n                                            id=\"rememberme\"\r\n                                            className=\"form-check-input\"\r\n                                            onChange={toggleRemember}\r\n                                            defaultChecked={storedRemember}\r\n                                        />\r\n                                        Remember me!\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <small className=\"text-light\">By clicking Sign in, you agree to the terms of use.</small>\r\n                            <hr className=\"my-4\" />\r\n                            <h2 className=\"fs-5 fw-bold mb-3\">Or use a third-party</h2>\r\n                            <button className=\"w-100 py-2 mb-2 btn btn-outline-warning rounded-4\" type=\"submit\">\r\n                                <svg className=\"bi me-1\" width=\"16\" height=\"16\">{<GoogleIcon />}</svg>\r\n                                Sign up with Google\r\n                            </button>\r\n                            <button className=\"w-100 py-2 mb-2 btn btn-outline-light rounded-4\" type=\"submit\">\r\n                                <svg className=\"bi me-1\" width=\"16\" height=\"16\">{<GitHubIcon />}</svg>\r\n                                Sign up with GitHub\r\n                            </button>\r\n                            <button className=\"w-100 py-2 mb-2 btn btn-outline-info rounded-4\" type=\"submit\">\r\n                                <svg className=\"bi me-1\" width=\"16\" height=\"16\">{<TwitterIcon />}</svg>\r\n                                Sign up with Twitter\r\n                            </button>\r\n                            <button className=\"w-100 py-2 mb-2 btn btn-outline-primary rounded-4\" type=\"submit\">\r\n                                <svg className=\"bi me-1\" width=\"16\" height=\"16\">{<FacebookIcon />}</svg>\r\n                                Sign up with Facebook\r\n                            </button>\r\n\r\n                            <span className=\"login-screen__subtext\">Don't have an account? <Link to=\"/signup\" className=\"login-screen__subtext__link\">Sign up</Link>\r\n                            </span>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default LoginScreen;"],"names":["ErrorAlertDismissible","data","useState","show","setShow","className","onLoad","style","width","marginLeft","role","viewBox","height","d","error","status","statusCode","onClick","SuccessAlertDismissible","message","username","email","navigate","useNavigate","location","useLocation","storedRemember","localStorage","getItem","fetchEmail","getLSItem","initEmail","fetchUsername","setItem","password","credentials","setCredentials","passwordType","setPasswordType","emailRef","useRef","useContext","AuthContext","state","dispatch","useEffect","current","value","focus","prev","JSON","parse","from","loginHandler","e","preventDefault","config","headers","type","ACTIONS","axios","theme","user","token","remember","stringify","payload","window","dispatchEvent","Event","response","ErrorRes","setTimeout","handleChange","target","id","togglePassword","tabIndex","capitalize","loading","onSubmit","htmlFor","ref","required","autoComplete","placeholder","onChange","name","to","checked","defaultChecked"],"sourceRoot":""}