{"version":3,"file":"static/js/162.20ffb9f3.chunk.js","mappings":"kNAcaA,EAAgB,CAC3BC,MAAO,GACPC,KAAM,GACNC,MAAO,EACPC,SAAU,GACVC,KAAM,GACNC,OAAQ,CACNC,GAAI,GACJC,GAAI,GACJC,GAAI,IAENC,SAAU,GAGCC,EACG,cADHA,EAEF,SAFEA,EAGC,YAHDA,EAID,WAJCA,EAKD,WAGCC,EAAc,SAACC,EAAYC,GACtC,OAAOA,EAAOC,MACZ,KAAKJ,EACH,OAAO,kBACFE,GAAK,cACPC,EAAOE,QAAQC,KAAOH,EAAOE,QAAQE,QAE1C,KAAKP,EACH,OAAO,kBACFE,GAAK,IACRR,KAAK,GAAD,eAAMQ,EAAMR,MAAI,CAAES,EAAOE,YAEjC,KAAKL,EACH,OAAO,kBACFE,GAAK,IACRR,KAAMQ,EAAMR,KAAKc,QAAO,SAACC,GAAW,OAAKA,IAAQN,EAAOE,OAAO,MAEnE,KAAKL,EACH,OAAO,kBACFE,GAAK,IACRH,SAAUG,EAAMH,SAAW,IAE/B,KAAKC,EACH,OAAO,kBACFE,GAAK,IACRH,SAAUG,EAAMH,SAAW,IAE/B,QACE,OAAOG,EAEb,E,mBC2BA,EAxF2B,WACzB,OAA0BQ,EAAAA,EAAAA,YAAWT,EAAaZ,GAAc,eAAzDa,EAAK,KAAES,EAAQ,KAChBC,GAASC,EAAAA,EAAAA,UAETC,EAAe,SAACC,GACpBJ,EAAS,CAAEP,KAAMJ,EAAsBK,QAAS,CAACC,KAAMS,EAAEC,OAAOV,KAAMC,MAAOQ,EAAEC,OAAOT,QACxF,EAWA,OAFAU,QAAQC,IAAIhB,IAGR,gBAAKiB,UAAU,kBAAiB,UAC9B,gBAAKA,UAAU,YAAW,UACxB,iBAAKA,UAAU,MAAK,WAClB,uCACA,SAAC,KAAY,KACb,0BACE,6BACE,kBACEA,UAAU,yBACVf,KAAK,OACLgB,YAAY,QACZC,SAAUP,EACVR,KAAK,WAEP,kBACEa,UAAU,yBACVf,KAAK,OACLgB,YAAY,OACZC,SAAUP,EACVR,KAAK,UAEP,kBACEa,UAAU,yBACVf,KAAK,SACLgB,YAAY,QACZC,SAAUP,EACVR,KAAK,WAEP,sCAAcJ,EAAMT,aACpB,oBAAQ4B,SAAUP,EAAcR,KAAK,WAAWa,UAAU,yBAAwB,WAChF,mBAAQZ,MAAM,WAAU,uBACxB,mBAAQA,MAAM,UAAS,uBACvB,mBAAQA,MAAM,QAAO,uBAEvB,kCACA,qBACEe,IAAKV,EACLO,UAAU,yBACVC,YAAY,kCAEd,mBAAQG,QAlDH,WACMX,EAAOY,QAAQjB,MAAMkB,MAAM,KAC7CC,SAAQ,SAACjB,GACZE,EAAS,CAAEP,KAAMJ,EAAiBK,QAASI,GAC7C,GACF,EA6C2CL,KAAK,SAAQ,uBAG1C,gBAAKe,UAAU,OAAM,SAClBjB,EAAMR,KAAKiC,KAAI,SAAClB,GAAQ,OACvB,kBACEc,QAAS,kBAAMZ,EAAS,CAAEP,KAAMJ,EAAoBK,QAASI,GAAM,EAAC,SAGnEA,GAFIA,EAGC,OAGZ,iBAAKU,UAAU,WAAU,WACvB,mBAAQI,QAAS,kBAAMZ,EAAS,CAAEP,KAAMJ,GAAkB,EAAEI,KAAK,SAAQ,gBAGzE,yCAAiBF,EAAMH,SAAQ,QAC/B,mBAAQwB,QAAS,kBAAMZ,EAAS,CAAEP,KAAMJ,GAAkB,EAAEI,KAAK,SAAQ,6BAU3F,C","sources":["components/pages/products/productReducer.ts","components/pages/products/Products.tsx"],"sourcesContent":["export interface IState {\r\n  title: string;\r\n  desc: string;\r\n  price: number;\r\n  category: string;\r\n  tags: string[],\r\n  images: {\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n  },\r\n  quantity: number,\r\n}\r\n\r\nexport const INITIAL_STATE = {\r\n  title: \"\",\r\n  desc: \"\",\r\n  price: 0,\r\n  category: \"\",\r\n  tags: [],\r\n  images: {\r\n    sm: \"\",\r\n    md: \"\",\r\n    lg: \"\",\r\n  },\r\n  quantity: 0,\r\n}\r\n\r\nexport const ACTIONS = {\r\n  CHANGE_INPUT: 'changeInput',\r\n  ADD_TAG: 'addTag',\r\n  REMOVE_TAG: 'removeTag',\r\n  INCREASE: 'increase',\r\n  DECREASE: 'decrease',\r\n}\r\n\r\nexport const formReducer = (state: any, action: any) => {\r\n  switch(action.type) {\r\n    case ACTIONS.CHANGE_INPUT: \r\n      return {\r\n        ...state,\r\n        [action.payload.name]: action.payload.value\r\n      }\r\n    case ACTIONS.ADD_TAG: \r\n      return {\r\n        ...state,\r\n        tags: [...state.tags, action.payload]\r\n      }\r\n    case ACTIONS.REMOVE_TAG: \r\n      return {\r\n        ...state,\r\n        tags: state.tags.filter((tag: string) => tag !== action.payload),\r\n      }\r\n    case ACTIONS.INCREASE: \r\n      return {\r\n        ...state,\r\n        quantity: state.quantity + 1\r\n      }\r\n    case ACTIONS.DECREASE: \r\n      return {\r\n        ...state,\r\n        quantity: state.quantity - 1\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n} ","import './Product.css';\r\nimport { ShoppingList } from '../';\r\nimport { formReducer, INITIAL_STATE, ACTIONS } from './productReducer';\r\nimport { ChangeEvent, useReducer, useRef } from 'react';\r\n\r\nconst Products: React.FC = () => {\r\n  const [state, dispatch] = useReducer(formReducer, INITIAL_STATE);\r\n  const tagRef = useRef<any>();\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLSelectElement>) => {\r\n    dispatch({ type: ACTIONS.CHANGE_INPUT, payload: {name: e.target.name, value: e.target.value}});\r\n  }\r\n\r\n  const handleTags = () => {\r\n    const tags: string[] = tagRef.current.value.split(\",\") as string[];\r\n    tags.forEach((tag: string) => {\r\n      dispatch({ type: ACTIONS.ADD_TAG, payload: tag });\r\n    });\r\n  }\r\n\r\n  console.log(state);\r\n\r\n  return (\r\n      <div className=\"fixed-container\">\r\n        <div className=\"container\">\r\n          <div className=\"App\">\r\n            <div>Products</div>\r\n            <ShoppingList />\r\n            <div>\r\n              <form>\r\n                <input \r\n                  className='root__background-color'\r\n                  type=\"text\"\r\n                  placeholder=\"Title\" \r\n                  onChange={handleChange} \r\n                  name=\"title\" \r\n                />\r\n                <input \r\n                  className='root__background-color'\r\n                  type=\"text\"\r\n                  placeholder=\"Desc\" \r\n                  onChange={handleChange} \r\n                  name=\"desc\" \r\n                />\r\n                <input \r\n                  className='root__background-color'\r\n                  type=\"number\"\r\n                  placeholder=\"Price\" \r\n                  onChange={handleChange} \r\n                  name=\"price\" \r\n                />\r\n                <p>Category: {state.category}</p>\r\n                <select onChange={handleChange} name=\"category\" className='root__background-color'>\r\n                  <option value=\"sneakers\">Sneakers</option>\r\n                  <option value=\"tshirts\">T-shirts</option>\r\n                  <option value=\"jeans\">Jeans</option>\r\n                </select>\r\n                <p>Tags:</p>\r\n                <textarea\r\n                  ref={tagRef}\r\n                  className=\"root__background-color\"\r\n                  placeholder=\"Seperate tags with commas...\"\r\n                ></textarea>\r\n                <button onClick={handleTags} type=\"button\">\r\n                  Add Tags\r\n                </button>\r\n                <div className=\"tags\">\r\n                  {state.tags.map((tag: any) => (\r\n                    <small\r\n                      onClick={() => dispatch({ type: ACTIONS.REMOVE_TAG, payload: tag })}\r\n                      key={tag}\r\n                    >\r\n                      {tag}\r\n                    </small>\r\n                  ))}\r\n                </div>\r\n                <div className=\"quantity\">\r\n                  <button onClick={() => dispatch({ type: ACTIONS.DECREASE})} type=\"button\">\r\n                    -\r\n                  </button>\r\n                  <span>Quantity ({state.quantity})</span>\r\n                  <button onClick={() => dispatch({ type: ACTIONS.INCREASE})} type=\"button\">\r\n                    +\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Products;"],"names":["INITIAL_STATE","title","desc","price","category","tags","images","sm","md","lg","quantity","ACTIONS","formReducer","state","action","type","payload","name","value","filter","tag","useReducer","dispatch","tagRef","useRef","handleChange","e","target","console","log","className","placeholder","onChange","ref","onClick","current","split","forEach","map"],"sourceRoot":""}