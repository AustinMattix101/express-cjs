{"version":3,"file":"static/js/609.2d02a840.chunk.js","mappings":"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","sources":["components/assets/components/AlertDismissible.tsx","components/pages/signup/SignupScreen.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { IAlert } from '.';\r\n\r\nexport const ErrorAlertDismissible: React.FC<IAlert> = ({ data }) => {\r\n  const [show, setShow] = useState(true);\r\n\r\n  if (show) {\r\n    return (\r\n      <div className=\"danger\" onLoad={() => setShow(false)} style={{ width: 380, marginLeft: 56 }}>\r\n        <div>\r\n          <svg className=\"bi flex-shrink-0 me-2\" role=\"img\" aria-label=\"Danger:\" viewBox=\"0 0 16 16\" height={22} width={22}>\r\n            <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\r\n          </svg>{data.error && <span>{data.status} {data.statusCode} ERROR!</span>}\r\n        </div>\r\n        <p className=\"error-message\">\r\n          <span>{data.error}</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  return <button onClick={() => setShow(true)} className=\"w-50 btn btn-outline-danger rounded-3\" style={{ marginLeft: 133 }}>Show Error</button>;\r\n};\r\n\r\n\r\nexport const SuccessAlertDismissible: React.FC<IAlert> = ({ data }) => {\r\n  const [show, setShow] = useState(true);\r\n\r\n  if (show) {\r\n    return (\r\n      <div className=\"success\" onLoad={() => setShow(false)} style={{ width: 380, marginLeft: 56 }}>\r\n        <div>\r\n          <svg className=\"bi flex-shrink-0 me-2\" role=\"img\" aria-label=\"Danger:\" viewBox=\"0 0 16 16\" height={22} width={22}>\r\n            <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n          </svg>{data.status} SUCCESS!\r\n        </div>\r\n        <p className=\"success-message\">\r\n          <span>{data.message}</span><br />\r\n          {(data.data.username || data.data.email) && <span>Profiles: </span>}\r\n          {data.data.username && <span><br />{`Username: ${data.data.username}`}</span>}\r\n          {data.data.email && <span><br />{`Email: ${data.data.email}`}</span>}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  return <button onClick={() => setShow(true)} className=\"w-50 btn btn-outline-success rounded-3\" style={{ marginLeft: 133 }}>Show Success</button>;\r\n\r\n};","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { GitHubIcon, TwitterIcon, FacebookIcon, GoogleIcon } from \"../../assets/components/svg\";\r\nimport { ErrorAlertDismissible, SuccessAlertDismissible } from \"../../assets/components/AlertDismissible\";\r\nimport { IData, capitalize } from \"..\";\r\nimport \"./SignupScreen.css\";\r\n\r\nconst RegisterScreen: React.FC = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [term, setTerm] = useState<any>(false);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [passwordType, setPasswordType] = useState(\"password\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const [data, setData] = useState<IData[\"data\"]>([{\r\n        success: false,\r\n        status: \"INITIALLED\",\r\n        error: \"\",\r\n        data: {}\r\n    }]);\r\n    const [errorStatusCode, setErrorStatusCode] = useState<IData[\"statusCode\"]>(0);\r\n    const [errorData, setErrorData] = useState<IData[\"data\"]>([{\r\n        success: false,\r\n        status: \"INITIALLED\",\r\n        error: \"\",\r\n        data: {}\r\n    }]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"authToken\")) {\r\n            if (location.state?.from) {\r\n                navigate(location.state.from);\r\n            } else {\r\n                navigate(\"/\");\r\n            }\r\n        }\r\n    }, [navigate, location.state?.from]);\r\n    \r\n\r\n    const registerHandler = async (e:any) => {\r\n        e.preventDefault();\r\n\r\n        const config = {\r\n            headers: {\r\n               \"Content-Type\": \"application/json\" \r\n            }\r\n        }\r\n\r\n        if (password !== confirmPassword) {\r\n            setPassword(\"\");\r\n            setConfirmPassword(\"\");\r\n            setTimeout(() => {\r\n                setErrorData([{\r\n                    status: \"\",\r\n                    success: false,\r\n                    error: \"\",\r\n                    data: {}\r\n                }]);\r\n            }, 5000);\r\n            return setErrorData([{\r\n                    status: \"FAILED\",\r\n                    success: false,\r\n                    error: \"Password do not match!\",\r\n                    data: {}\r\n                }]);\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.post(\"/api/auth/register\", {username, email, password}, config);\r\n\r\n            localStorage.setItem(\"Username\", data.data.username);\r\n            localStorage.setItem(\"Email\", data.data.email);\r\n\r\n            setData([data]);\r\n\r\n        } catch (error:any) {\r\n            setErrorData([error.response.data]);\r\n            setErrorStatusCode(error.response.status);\r\n            setData([{\r\n                status: \"\",\r\n                success: false,\r\n                message: \"\",\r\n                error: \"\",\r\n                data: {}\r\n            }]);\r\n            setTimeout(() => {\r\n                setErrorData([{\r\n                    status: \"\",\r\n                    success: false,\r\n                    error: \"\",\r\n                    data: {}\r\n                }]);\r\n                setErrorStatusCode(0);\r\n            }, 5000);\r\n        }\r\n    }\r\n\r\n    const togglePassword = async () => {\r\n        if(passwordType === \"password\")\r\n        {\r\n         setPasswordType(\"text\")\r\n         return;\r\n        }\r\n        setPasswordType(\"password\")\r\n    }\r\n\r\n    const navigateHandler = () => {\r\n        if (location.state?.from) {\r\n            navigate(location.state.from);\r\n        } else {\r\n            navigate(\"/\");\r\n        }\r\n    }\r\n\r\n    const fetchUsername = localStorage.getItem(\"Username\");\r\n\r\n    return(\r\n        <div className=\"register-screen\">\r\n            <div className=\"modal position-static d-block pb-3 text-light\" tabIndex={-1} role=\"dialog\">\r\n                <div className=\"modal-dialog pt-5\" role=\"document\">\r\n                    <div className=\"modal-content bg-black bg-opacity-25 rounded-5 shadow border\">\r\n                        <div className=\"modal-header p-5 pb-2 border-bottom-0\">\r\n                            <h2 className=\"fw-bold mb-4\">Create your account</h2>\r\n                            <button type=\"button\" className=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={navigateHandler}>\r\n                            </button>\r\n                        </div>\r\n                            {fetchUsername && <p className='h4 text-center'>Welcome, {capitalize(fetchUsername)}</p>}\r\n                            {data[0].success && <SuccessAlertDismissible data={data[0]}/>}\r\n                            {errorData[0].error && <ErrorAlertDismissible data={errorData[0]} statusCode= {errorStatusCode}/>}\r\n\r\n                        <div className=\"modal-body p-5 pt-3\">\r\n                            <form className=\"register-screen__form\" onSubmit={registerHandler}>\r\n\r\n                                <div className=\"form-floating mb-2\">\r\n                                    <input \r\n                                    className=\"form-control rounded-4 bg-black text-light\"\r\n                                    type=\"text\" \r\n                                    required \r\n                                    id=\"username\" \r\n                                    placeholder=\"Username\"\r\n                                    autoComplete=\"true\" \r\n                                    value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n                                    <label \r\n                                    htmlFor=\"username\">Username</label>\r\n                                </div>\r\n\r\n                                <div className=\"form-floating mb-2\">\r\n                                    <input \r\n                                    type=\"email\" \r\n                                    required \r\n                                    id=\"email\"\r\n                                    className=\"form-control rounded-4 bg-black text-light\"\r\n                                    autoComplete=\"true\"\r\n                                    placeholder=\"name@example.com\"\r\n                                    value={email} \r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                    <label \r\n                                    htmlFor=\"email\">Email address</label>\r\n                                </div>\r\n\r\n                                <div className=\"form-floating mb-2\">\r\n                                    <input \r\n                                    type={passwordType} \r\n                                    required \r\n                                    id=\"password\"\r\n                                    className=\"form-control rounded-4 bg-black text-light\" placeholder=\"Password\"\r\n                                    value={password} \r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                    <label \r\n                                    htmlFor=\"password\">Password\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"form-floating mb-2\">\r\n                                    <input \r\n                                    type=\"password\"\r\n                                    required \r\n                                    id=\"confirmpassword\" \r\n                                    className=\"form-control rounded-4 bg-black text-light\" placeholder=\"Password\"\r\n                                    value={confirmPassword} \r\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                    />\r\n                                    <label htmlFor=\"confirmpassword\">Confirm Password</label>\r\n                                </div>\r\n\r\n                                <div className=\"text-center mb-3\"><button type=\"button\" className=\"btn btn-warning\" onClick={togglePassword}><span>Show Password</span></button></div>\r\n\r\n                                <button className=\"w-100 mb-2 btn btn-lg rounded-4 btn-outline-light\" type=\"submit\">Sign up</button>\r\n                                <input type=\"checkbox\" value={term} onChange={(e) => setTerm(e.target.value)}/>\r\n                                <small className=\"mb-3\">\r\n                                    <span>By clicking Sign up, you agree to the terms of use.</span>\r\n                                </small>\r\n                                <hr className=\"my-4\"/>\r\n                                <h2 className=\"fs-5 fw-bold mb-3\">Or use a third-party</h2>\r\n                                <button className=\"w-100 py-2 mb-2 btn btn-outline-warning rounded-4\" type=\"submit\">\r\n                                    <svg className=\"bi me-1\" width=\"16\" height=\"16\">{<GoogleIcon/>}</svg>\r\n                                    Sign up with Google\r\n                                </button>\r\n                                <button className=\"w-100 py-2 mb-2 btn btn-outline-light rounded-4\" type=\"submit\">\r\n                                    <svg className=\"bi me-1\" width=\"16\" height=\"16\">{<GitHubIcon/>}</svg>\r\n                                    Sign up with GitHub\r\n                                </button>\r\n                                <button className=\"w-100 py-2 mb-2 btn btn-outline-info rounded-4\" type=\"submit\">\r\n                                    <svg className=\"bi me-1\" width=\"16\" height=\"16\">{<TwitterIcon/>}</svg>\r\n                                    Sign up with Twitter\r\n                                </button>\r\n                                <button className=\"w-100 py-2 mb-2 btn btn-outline-primary rounded-4\" type=\"submit\">\r\n                                    <svg className=\"bi me-1\" width=\"16\" height=\"16\">{<FacebookIcon/>}</svg>\r\n                                    Sign up with Facebook\r\n                                </button>\r\n\r\n                                <span className=\"register-screen__subtext\">Already have an account? <Link className=\"register-screen__subtext__link\" to=\"/signin\">Sign in</Link></span>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;"],"names":["ErrorAlertDismissible","data","useState","show","setShow","className","onLoad","style","width","marginLeft","role","viewBox","height","d","error","status","statusCode","onClick","SuccessAlertDismissible","message","username","email","navigate","useNavigate","location","useLocation","term","setTerm","setUsername","setEmail","passwordType","setPasswordType","password","setPassword","confirmPassword","setConfirmPassword","success","setData","errorStatusCode","setErrorStatusCode","errorData","setErrorData","useEffect","localStorage","getItem","state","from","registerHandler","e","preventDefault","config","headers","setTimeout","axios","setItem","response","togglePassword","fetchUsername","tabIndex","type","capitalize","onSubmit","required","id","placeholder","autoComplete","value","onChange","target","htmlFor","to"],"sourceRoot":""}