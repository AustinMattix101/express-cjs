{"version":3,"file":"static/js/287.0c506b9b.chunk.js","mappings":"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","sources":["hooks/useIPFetch.ts","components/routes/mainRoute.tsx","components/routes/ProtectedRoute.tsx","components/app/App.tsx","components/pages/index.ts","context/AuthContext.tsx"],"sourcesContent":["import axios from \"axios\";\r\n// import i18next from \"i18next\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport useReactIpLocation from \"react-ip-details\";\r\nimport publicIp from \"react-public-ip\";\r\n\r\n// function TimePickerTest(): JSX.Element {\r\n//   const {\r\n//     currency,\r\n//     exchangeRate,\r\n//     ipResponse,\r\n//     exchangeRateResponse,\r\n//     errorMessage,\r\n//     geoLocationPosition,\r\n//     geoLocationErrorMessage,\r\n//     currencyString,\r\n//   } = useReactIpLocation({ numberToConvert: 100 });\r\n//   console.log(`Full ip response ${ipResponse}`);\r\n//   console.log(`Full ip exchange-rate response ${exchangeRateResponse}`);\r\n//   return (\r\n//     <div>\r\n//       {`Local currency string format is ${currencyString} ,`}\r\n//       {`Local currency is ${currency} ,`}\r\n//       {`Geo location details: ${geoLocationPosition} ,`}\r\n//       {`Exchange rate is ${exchangeRate} ,`}\r\n//       {`Error Message: ${errorMessage} ,`}\r\n//       {`Geo Error Message: ${geoLocationErrorMessage} ,`}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nconst useIPFetch = (): void => {\r\n  const fingerprint = useRef();\r\n  const ipv4 = useRef();\r\n  const ipv6 = useRef();\r\n  // const language_code = useRef(\"en-US\");\r\n\r\n  const {\r\n    currency,\r\n    exchangeRate,\r\n    ipResponse,\r\n    exchangeRateResponse,\r\n    errorMessage,\r\n    geoLocationPosition,\r\n    geoLocationErrorMessage,\r\n    currencyString,\r\n  } = useReactIpLocation({ numberToConvert: 100 });\r\n\r\n  useEffect(() => {\r\n    const getIpAddress = async (): Promise<void> => {\r\n      ipv4.current = await publicIp.v4();\r\n      ipv6.current = await publicIp.v6();\r\n    };\r\n\r\n    getIpAddress();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const postQuest = async (): Promise<void> => {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n\r\n      if (!fingerprint.current) {\r\n        const { data } = await axios.post(\"/api/guest\", {fingerprint: fingerprint.current, ipv4: ipv4.current, ipv6: ipv6.current, ipResponse, currencyString, currency, geoLocationPosition, exchangeRate, exchangeRateResponse, errorMessage, geoLocationErrorMessage }, config);\r\n\r\n        fingerprint.current = data.fingerprint;\r\n        console.log(\"FingerPrint: \", fingerprint.current);\r\n        // if (data.currency === \"USD\")\r\n        //   language_code.current = \"en-US\";\r\n        // i18next.changeLanguage(language_code.current);\r\n      }\r\n    }\r\n    postQuest();\r\n  }, [currency, currencyString, errorMessage, exchangeRate, exchangeRateResponse, geoLocationErrorMessage, geoLocationPosition, ipResponse]);\r\n  \r\n\r\n};\r\n\r\nexport default useIPFetch;","import { Suspense } from \"react\";\r\nimport { BrowserRouter as Router, Routes as Switch, Route} from 'react-router-dom';\r\n\r\nimport { ProtectedRoute } from \"./\";\r\nimport { getLoadingMarkup } from \"../assets/components\";\r\nimport { SharedLayout, Home, About, Products, Profile, SingleProfile, FourOFour, DashboardScreen, Stat, EmailConfirmation, ForgotPasswordScreen, SigninScreen, SignupScreen, ResetPasswordScreen, Setting, ValidateTwoFA, VerifyEmail } from \"../pages\";\r\nimport { AuthContextProvider } from \"../../context/AuthContext\";\r\n\r\nconst MainRoute: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      <Suspense fallback={getLoadingMarkup()}>\r\n        <Switch>\r\n          <Route path=\"/\" element={ <SharedLayout /> }>\r\n              <Route \r\n              index \r\n              element={ <Home /> }\r\n              />\r\n              <Route \r\n              path=\"profile\" \r\n              element={ <ProtectedRoute><Profile/></ProtectedRoute> }\r\n              />\r\n            <Route \r\n            path=\"profile/:username\" \r\n            element={ <ProtectedRoute><SingleProfile/></ProtectedRoute> }\r\n            />\r\n              <Route \r\n              path=\"about\" \r\n              element={ <About/> }\r\n              />\r\n              <Route \r\n              path=\"products\" \r\n              element={ <Products/> }\r\n              />\r\n              <Route \r\n              path=\"dashboard\" \r\n              element={<ProtectedRoute><DashboardScreen/></ProtectedRoute>}\r\n              >\r\n                    <Route \r\n                    path=\"stat\" \r\n                    element={<Stat/>}\r\n                    />\r\n              </Route>\r\n              <Route \r\n              path=\"setting\" \r\n              element={<ProtectedRoute><Setting/></ProtectedRoute>}\r\n              />\r\n              <Route \r\n              path=\"signin\" \r\n              element={<AuthContextProvider><SigninScreen /></AuthContextProvider>}\r\n              />\r\n              <Route \r\n              path=\"signup\" \r\n              element={<SignupScreen />}\r\n              />\r\n              <Route \r\n              path=\"emailconfirm\" \r\n              element={<EmailConfirmation/>}\r\n              />\r\n              <Route \r\n              path=\"verifyemail\" \r\n              element={<VerifyEmail/>}\r\n              />\r\n              <Route \r\n              path=\"validatetwofa\" \r\n              element={<ValidateTwoFA/>}\r\n              />\r\n              <Route \r\n              path=\"forgotpassword\" \r\n              element={<ForgotPasswordScreen/>}\r\n              />\r\n              <Route \r\n              path=\"passwordreset/:resetToken\" \r\n              element={<ResetPasswordScreen />}\r\n              />\r\n              <Route \r\n              path=\"*\" \r\n              element={<FourOFour/>}\r\n              />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default MainRoute;\r\n","import { Navigate, useLocation } from \"react-router-dom\";\r\nimport { getLSItem } from \"../pages\";\r\n\r\nfunction ProtectedRoute({ children }: any) {\r\n  const location = useLocation();\r\n  const token: string = getLSItem(\"user\", 0, \"token\");\r\n\r\n  if (!token)\r\n    return <Navigate to=\"/signin\" replace state={{ from: location }} />;\r\n  else\r\n    return children;\r\n}\r\n\r\nexport default ProtectedRoute;","import useIPFetch from '../../hooks/useIPFetch';\nimport { MainRoute } from '../routes';\nimport './App.css';\n\nconst App: React.FC = () => {\n\n  useIPFetch();\n\n  return (\n    <MainRoute />\n  );\n};\n\nexport default App;\n","import { lazy } from \"react\";\r\n\r\nconst SharedLayout = lazy(() => import(\"./sharedLayout/SharedLayout\"));\r\nconst Home = lazy(() => import(\"./home/Home\"));\r\nconst About = lazy(() => import(\"./about/About\"));\r\nconst Products = lazy(() => import(\"./products/Products\"));\r\nconst Profile = lazy(() => import(\"./profile/Profile\"));\r\nconst SingleProfile = lazy(() => import(\"./singleProfile/SingleProfile\"));\r\nconst FourOFour = lazy(() => import(\"./error/404\"));\r\n\r\nconst DashboardScreen = lazy(() => import(\"./dashboard/DashboardScreen\"));\r\nconst Stat = lazy(() => import(\"./dashboard/Stat\"));\r\nconst EmailConfirmation = lazy(() => import(\"./emailConfirm/EmailConfirmation\"));\r\nconst ForgotPasswordScreen = lazy(() => import(\"./forgotPassword/ForgotPasswordScreen\"));\r\nconst SigninScreen = lazy(() => import(\"./signin/SigninScreen\"));\r\nconst SignupScreen = lazy(() => import(\"./signup/SignupScreen\"));\r\nconst ResetPasswordScreen = lazy(() => import(\"./resetPassword/ResetPasswordScreen\"));\r\nconst Setting = lazy(() => import(\"./setting/Setting\"));\r\nconst ShoppingList = lazy(() => import(\"./shopping/ShoppingList\"));\r\nconst ValidateTwoFA = lazy(() => import(\"./validateTwoFA/ValidateTwoFA\"));\r\nconst VerifyEmail = lazy(() => import(\"./verifyEmail/VerifyEmail\"));\r\n\r\nexport {\r\n    SharedLayout,\r\n    Home,\r\n    About,\r\n    Products,\r\n    Profile,\r\n    SingleProfile,\r\n    FourOFour,\r\n    DashboardScreen,\r\n    Stat,\r\n    EmailConfirmation,\r\n    ForgotPasswordScreen,\r\n    SigninScreen,\r\n    SignupScreen,\r\n    ResetPasswordScreen,\r\n    Setting,\r\n    ShoppingList,\r\n    ValidateTwoFA,\r\n    VerifyEmail,\r\n}\r\n\r\nexport interface IData {\r\n    data: {\r\n      success: boolean;\r\n      status: string;\r\n      message?: string;\r\n      error: string;\r\n      data: {\r\n        username?: string;\r\n        email?: string;\r\n      };\r\n    }[];\r\n    statusCode: number;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param str string\r\n   * @returns Capitalized String {@link capitalize}\r\n   */\r\nexport function capitalize(str:string) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n/**\r\n * Get LocalStrorage Item {@link getLSItem}\r\n * @param key Key-Value_Pairs\r\n * @param index Index of Object[]\r\n * @param object Alias of Object\r\n * @returns String of given alias, Error: return Empty string ``;\r\n * @Usage\r\n * ```ts\r\n * const token: string = getLSItem(\"user\", 0, \"token\");\r\n * ```\r\n */\r\nexport const getLSItem = (key: string, index: number, object: string): string => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key) || ``)[index][object];\r\n  } catch (error) {\r\n    return ``;\r\n  }\r\n}\r\n\r\n/**\r\n * Clear or Delete LocalStrorage Item {@link clearLSItem}\r\n * @param key Key-Value_Pairs\r\n * @param index Index of Object[]\r\n * @param object Alias of Object\r\n * @returns void;\r\n * @Usage\r\n * ```ts\r\n * clearLSItem('user', 0, 'token');\r\n * ```\r\n */\r\nexport const clearLSItem = (key: string, index: number, object: string): void => {\r\n  try {\r\n    let i = JSON.parse(localStorage.getItem(key) || ``);\r\n    i[index][object] = ``;\r\n    localStorage.setItem(key, JSON.stringify(i));\r\n  } catch (error) {\r\n    return;\r\n  }\r\n}\r\n\r\n/**\r\n * Update or Add LocalStrorage Item {@link updateLSItem}\r\n * @param key Key-Value_Pairs\r\n * @param index Index of Object[]\r\n * @param object Alias of Object\r\n * @param value Value of Item\r\n * @return void;\r\n * @Usage\r\n * ```ts\r\n * updateLSItem('user', 0, 'username', 'austin');\r\n * ```\r\n */\r\nexport const updateLSItem = (key: string, index: number, object: string, value: string): void => {\r\n  try {\r\n    let i = JSON.parse(localStorage.getItem(key) || ``);\r\n    i[index][object] = value;\r\n    localStorage.setItem(key, JSON.stringify(i));\r\n  } catch (error) {\r\n    return;\r\n  }\r\n}\r\n\r\n/**\r\n * Add LocalStrorage Object {@link addLSObject}\r\n * @param key Key-Value_Pairs\r\n * @param index Index of Object[]\r\n * @param o Object of Object[]\r\n * @return void;\r\n * @Usage\r\n * ```ts\r\n * addLSObject('user', { username: \"austin\", email: \"email@email.com\" });\r\n * ```\r\n */\r\n export const addLSObject = (key: string, o: object): void => {\r\n  try {\r\n    let i = JSON.parse(localStorage.getItem(key) || ``);\r\n    i.push(o);\r\n    localStorage.setItem(key, JSON.stringify(i));\r\n  } catch (error) {\r\n    return;\r\n  }\r\n}","import React, { createContext, useReducer } from \"react\";\r\n\r\nexport const enum ACTIONS {\r\n    START = \"loginStart\",\r\n    SUCCESS = \"loginSuccess\",\r\n    FAILURE = \"loginFailure\",\r\n    LOGOUT = \"logOut\",\r\n}\r\n\r\ninterface IAuth {\r\n    user: object | null;\r\n    loading: boolean;\r\n    error: any | null;\r\n    term: boolean;\r\n}\r\n\r\nexport interface IData {\r\n    data: {\r\n        success: boolean;\r\n        status: string;\r\n        message?: string;\r\n        errorMessage?: string;\r\n        data: {\r\n            username?: string;\r\n            email?: string;\r\n        };\r\n        statusCode?: number;\r\n    }[];\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    term: false,\r\n    statusCode: 0\r\n};\r\n\r\nexport const AuthContext = createContext<{\r\n    state: IAuth;\r\n    dispatch: React.Dispatch<any>;\r\n}>({\r\n    state: INITIAL_STATE,\r\n    dispatch: () => null\r\n});\r\n\r\n\r\nconst AuthReducer = (state: IAuth, action: { type: ACTIONS; payload: IData[\"data\"]; }) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ACTIONS.START:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case ACTIONS.SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: payload,\r\n                term: true,\r\n            };\r\n        case ACTIONS.FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: payload,\r\n            };\r\n        case ACTIONS.LOGOUT:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                term: false,\r\n                user: null,\r\n                error: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const AuthContextProvider = ({ children }: any) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                state,\r\n                dispatch,\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};"],"names":["fingerprint","useRef","ipv4","ipv6","useReactIpLocation","numberToConvert","currency","exchangeRate","ipResponse","exchangeRateResponse","errorMessage","geoLocationPosition","geoLocationErrorMessage","currencyString","useEffect","getIpAddress","publicIp","current","postQuest","config","headers","axios","data","console","log","Suspense","fallback","getLoadingMarkup","path","element","index","AuthContext","children","location","useLocation","getLSItem","to","replace","state","from","useIPFetch","SharedLayout","lazy","Home","About","Products","Profile","SingleProfile","FourOFour","DashboardScreen","Stat","EmailConfirmation","ForgotPasswordScreen","SigninScreen","SignupScreen","ResetPasswordScreen","Setting","ShoppingList","ValidateTwoFA","VerifyEmail","capitalize","str","charAt","toUpperCase","slice","key","object","JSON","parse","localStorage","getItem","error","clearLSItem","i","setItem","stringify","updateLSItem","value","ACTIONS","INITIAL_STATE","user","loading","term","statusCode","createContext","dispatch","AuthReducer","action","type","payload","START","SUCCESS","FAILURE","LOGOUT","AuthContextProvider","useReducer","Provider"],"sourceRoot":""}